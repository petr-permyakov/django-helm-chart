# Default values for django.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: glitchtip/glitchtip  # Demo app, change this.
  tag: latest
  pullPolicy: Always

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

preInstall:
  enabled: true
  activeDeadlineSeconds: 900

env:
  normal: {}
  secret: {}
    # SECRET_KEY:
    # DATABASE_URL:
    # REDIS_URL:

existingSecret: ""

web:
  replicaCount: 2
  port: 8080
  autoscaling:
    enabled: false
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  budget:
    minAvailable: 1 # Ignored when replicaCount is 1
  resources:
    limits:
      cpu: 1000m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  nodeSelector: {}
  tolerations: []
  podAnnotations: {}
  affinity: {}
    # podAntiAffinity:
    #   preferredDuringSchedulingIgnoredDuringExecution:
    #   - weight: 100
    #     podAffinityTerm:
    #       labelSelector:
    #         matchExpressions:
    #         - key: app.kubernetes.io/instance
    #           operator: In
    #           values:
    #           - glitchtip-prod-web
    #       topologyKey: kubernetes.io/hostname
  livenessProbe:
    failureThreshold: 5
    initialDelaySeconds: 5
    timeoutSeconds: 2
    path: "/_health/"
  readinessProbe:
    failureThreshold: 10
    initialDelaySeconds: 5
    timeoutSeconds: 2
    path: "/_health/"
  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

worker:
  enabled: true
  replicaCount: 1
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 90
    # targetMemoryUtilizationPercentage: 80
  livenessProbe: {}
    # initialDelaySeconds: 10
    # periodSeconds: 60
    # timeoutSeconds: 30
    # exec:
    #   command:
    #     - "bash"
    #     - "-c"
    #     - "celery -A django inspect ping -d celery@$HOSTNAME | grep -q OK"
  resources:
    limits:
      cpu: 900m
      memory: 768Mi
    requests:
      cpu: 100m
      memory: 128Mi
  nodeSelector: {}
  tolerations: []
  podAnnotations: {}
  affinity: {}

beat:
  enabled: true
  resources:
    limits:
      cpu: 100m
      memory: 120Mi
    requests:
      cpu: 1m
      memory: 90Mi
  nodeSelector: {}
  tolerations: []
  podAnnotations: {}
  affinity: {}

flower:
  enabled: false
  image:
    repository: mher/flower
    tag: latest
    pullPolicy: IfNotPresent
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 50m
      memory: 256Mi
  nodeSelector: {}
  tolerations: []
  podAnnotations: {}
  affinity: {}
  service:
    type: ClusterIP
    port: 80
  ingress:
    enabled: false
    annotations:
      {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

redis:
  enabled: true
  master:
    persistence:
      enabled: false
  replica:
    replicaCount: 1
    persistence:
      enabled: false

# Default to disabled, use a managed database service. But can be enabled here.
postgresql:
  enabled: false
  #auth:
  #  postgresqlPassword: # Must be set

# pre-install-job
PreInstalljob:
  resources: null